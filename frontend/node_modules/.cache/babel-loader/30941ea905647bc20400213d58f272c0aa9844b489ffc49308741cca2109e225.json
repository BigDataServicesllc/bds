{"ast":null,"code":"var _jsxFileName = \"/Users/michaelortiz/Documents/BDS/bds/frontend/src/components/LayoutHeader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n// 1. Importamos NavLink de react-router-dom\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LayoutHeader = ({\n  onToggleLanguage,\n  language\n}) => {\n  _s();\n  // Ya no necesitamos 'currentPage' ni 'onNavigate'\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  // 2. Actualizamos los items para incluir la ruta (path)\n  const navItems = [{\n    name: 'Inicio',\n    path: '/'\n  }, {\n    name: 'Servicios',\n    path: '/servicios'\n  }\n  // A futuro podríamos añadir estas páginas:\n  // { name: 'Learning', path: '/learning' },\n  // { name: 'Contacto', path: '/contacto' },\n  ];\n  const getDisplayName = name => {\n    if (language === 'en') {\n      switch (name) {\n        case 'Inicio':\n          return 'Home';\n        case 'Servicios':\n          return 'Services';\n        // ... etc\n        default:\n          return name;\n      }\n    }\n    return name;\n  };\n\n  // 3. Creamos un componente para los enlaces\n  const CustomNavLink = ({\n    item\n  }) => /*#__PURE__*/_jsxDEV(NavLink, {\n    to: item.path,\n    onClick: () => setIsMenuOpen(false) // Cierra el menú móvil al hacer clic\n    // NavLink nos da 'isActive' para saber si es el enlace de la página actual\n    ,\n    className: ({\n      isActive\n    }) => `py-2 px-3 rounded-md text-sm font-medium transition-colors duration-300 ${isActive ? 'text-white bg-blue-500/30' // Estilo activo\n    : 'text-gray-300 hover:bg-gray-700/50 hover:text-white' // Estilo inactivo\n    }`,\n    children: getDisplayName(item.name)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"fixed top-0 left-0 right-0 bg-gray-900/80 backdrop-blur-sm z-50 shadow-lg shadow-black/20\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mx-auto px-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center h-20\",\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          className: \"text-xl font-bold text-white\",\n          children: \"Big Data Services\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"hidden md:flex items-center space-x-2\",\n          children: [navItems.map(item => /*#__PURE__*/_jsxDEV(CustomNavLink, {\n            item: item\n          }, item.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-px h-6 bg-gray-600 mx-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: onToggleLanguage,\n            className: \"px-3 py-1.5 rounded-md border border-gray-600 text-gray-300 text-sm font-medium hover:bg-gray-700/50 transition-colors\",\n            children: language === 'es' ? 'EN' : 'ES'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"md:hidden\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsMenuOpen(!isMenuOpen),\n            className: \"p-2 rounded-md ...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), isMenuOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"md:hidden pb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"nav\", {\n          className: \"flex flex-col space-y-2\",\n          children: navItems.map(item => /*#__PURE__*/_jsxDEV(CustomNavLink, {\n            item: item\n          }, item.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(LayoutHeader, \"vK10R+uCyHfZ4DZVnxbYkMWJB8g=\");\n_c = LayoutHeader;\nexport default LayoutHeader;\nvar _c;\n$RefreshReg$(_c, \"LayoutHeader\");","map":{"version":3,"names":["React","useState","NavLink","jsxDEV","_jsxDEV","LayoutHeader","onToggleLanguage","language","_s","isMenuOpen","setIsMenuOpen","navItems","name","path","getDisplayName","CustomNavLink","item","to","onClick","className","isActive","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["/Users/michaelortiz/Documents/BDS/bds/frontend/src/components/LayoutHeader.js"],"sourcesContent":["import React, { useState } from 'react';\n// 1. Importamos NavLink de react-router-dom\nimport { NavLink } from 'react-router-dom';\n\nconst LayoutHeader = ({ onToggleLanguage, language }) => {\n  // Ya no necesitamos 'currentPage' ni 'onNavigate'\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n\n  // 2. Actualizamos los items para incluir la ruta (path)\n  const navItems = [\n    { name: 'Inicio', path: '/' },\n    { name: 'Servicios', path: '/servicios' },\n    // A futuro podríamos añadir estas páginas:\n    // { name: 'Learning', path: '/learning' },\n    // { name: 'Contacto', path: '/contacto' },\n  ];\n\n  const getDisplayName = (name) => {\n    if (language === 'en') {\n      switch (name) {\n        case 'Inicio': return 'Home';\n        case 'Servicios': return 'Services';\n        // ... etc\n        default: return name;\n      }\n    }\n    return name;\n  };\n\n  // 3. Creamos un componente para los enlaces\n  const CustomNavLink = ({ item }) => (\n    <NavLink\n      to={item.path}\n      onClick={() => setIsMenuOpen(false)} // Cierra el menú móvil al hacer clic\n      // NavLink nos da 'isActive' para saber si es el enlace de la página actual\n      className={({ isActive }) => \n        `py-2 px-3 rounded-md text-sm font-medium transition-colors duration-300 ${\n          isActive\n            ? 'text-white bg-blue-500/30' // Estilo activo\n            : 'text-gray-300 hover:bg-gray-700/50 hover:text-white' // Estilo inactivo\n        }`\n      }\n    >\n      {getDisplayName(item.name)}\n    </NavLink>\n  );\n\n  return (\n    <header className=\"fixed top-0 left-0 right-0 bg-gray-900/80 backdrop-blur-sm z-50 shadow-lg shadow-black/20\">\n      <div className=\"container mx-auto px-4\">\n        <div className=\"flex justify-between items-center h-20\">\n          {/* Logo ahora es un Link a la página de inicio */}\n          <NavLink to=\"/\" className=\"text-xl font-bold text-white\">\n            Big Data Services\n          </NavLink>\n\n          {/* Navegación para Escritorio */}\n          <nav className=\"hidden md:flex items-center space-x-2\">\n            {navItems.map((item) => (\n              <CustomNavLink key={item.path} item={item} />\n            ))}\n            <div className=\"w-px h-6 bg-gray-600 mx-4\"></div>\n            <button\n              onClick={onToggleLanguage}\n              className=\"px-3 py-1.5 rounded-md border border-gray-600 text-gray-300 text-sm font-medium hover:bg-gray-700/50 transition-colors\"\n            >\n              {language === 'es' ? 'EN' : 'ES'}\n            </button>\n          </nav>\n\n          {/* Botón de Menú para Móvil */}\n          <div className=\"md:hidden\">\n            <button onClick={() => setIsMenuOpen(!isMenuOpen)} className=\"p-2 rounded-md ...\">\n              {/* ... SVG de la hamburguesa/X ... */}\n            </button>\n          </div>\n        </div>\n\n        {/* Panel del Menú Móvil */}\n        {isMenuOpen && (\n          <div className=\"md:hidden pb-4\">\n            <nav className=\"flex flex-col space-y-2\">\n              {navItems.map((item) => (\n                <CustomNavLink key={item.path} item={item} />\n              ))}\n              {/* ... botón de idioma móvil ... */}\n            </nav>\n          </div>\n        )}\n      </div>\n    </header>\n  );\n};\n\nexport default LayoutHeader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}