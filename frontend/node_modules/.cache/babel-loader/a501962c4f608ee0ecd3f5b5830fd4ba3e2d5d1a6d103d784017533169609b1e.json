{"ast":null,"code":"var _jsxFileName = \"/Users/michaelortiz/Documents/BDS/bds/frontend/src/pages/HomePage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/HomePage.js (VERSIÓN FINAL Y LIMPIA)\n\nimport React, { useState, useEffect } from 'react';\n\n// Importamos SOLO las secciones que pertenecen a esta página\nimport HomeSection from '../components/HomeSection';\nimport ServicesSection from '../components/ServicesSection';\nimport LearningSection from '../components/LearningSection';\nimport ContactSection from '../components/ContactSection';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  // Toda la lógica que controla el scroll y el estado de la página de inicio\n  // se queda aquí, ya que solo pertenece a esta página.\n  const [currentPage, setCurrentPage] = useState('home');\n  const [language, setLanguage] = useState('es'); // Suponiendo que el idioma se maneja por página\n\n  // Lógica para el scroll-spy\n  useEffect(() => {\n    const handleScroll = () => {\n      const sections = ['home', 'services', 'learning', 'contact'];\n      const scrollPosition = window.scrollY + window.innerHeight / 2;\n      for (const sectionId of sections) {\n        const section = document.getElementById(sectionId);\n        if (section) {\n          if (scrollPosition >= section.offsetTop && scrollPosition < section.offsetTop + section.offsetHeight) {\n            setCurrentPage(sectionId);\n            break;\n          }\n        }\n      }\n    };\n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n\n  // Lógica para la navegación interna de la página\n  const handleNavigate = pageId => {\n    setCurrentPage(pageId);\n    const section = document.getElementById(pageId);\n    if (section) {\n      window.scrollTo({\n        top: section.offsetTop - 80,\n        // Ajuste para el header fijo\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  // NOTA: El `handleToggleLanguage` lo hemos dejado en App.js\n  // por ahora, pero lo ideal sería usar un Context. Esto lo podemos\n  // ver como una mejora futura. De momento pasaremos el idioma desde App.js\n\n  return (\n    /*#__PURE__*/\n    // Usamos un React.Fragment (<>) porque no necesitamos un div extra.\n    _jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(HomeSection, {\n        language: language,\n        onNavigate: handleNavigate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ServicesSection, {\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), \" \", /*#__PURE__*/_jsxDEV(LearningSection, {\n        language: language,\n        onNavigate: handleNavigate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ContactSection, {\n        language: language\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  );\n};\n_s(HomePage, \"qG6gTlmoCucHCDD0dectoUpGpqk=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useState","useEffect","HomeSection","ServicesSection","LearningSection","ContactSection","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","currentPage","setCurrentPage","language","setLanguage","handleScroll","sections","scrollPosition","window","scrollY","innerHeight","sectionId","section","document","getElementById","offsetTop","offsetHeight","addEventListener","removeEventListener","handleNavigate","pageId","scrollTo","top","behavior","children","onNavigate","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/michaelortiz/Documents/BDS/bds/frontend/src/pages/HomePage.js"],"sourcesContent":["// frontend/src/pages/HomePage.js (VERSIÓN FINAL Y LIMPIA)\n\nimport React, { useState, useEffect } from 'react';\n\n// Importamos SOLO las secciones que pertenecen a esta página\nimport HomeSection from '../components/HomeSection';\nimport ServicesSection from '../components/ServicesSection';\nimport LearningSection from '../components/LearningSection';\nimport ContactSection from '../components/ContactSection';\n \nconst HomePage = () => {\n  // Toda la lógica que controla el scroll y el estado de la página de inicio\n  // se queda aquí, ya que solo pertenece a esta página.\n  const [currentPage, setCurrentPage] = useState('home');\n  const [language, setLanguage] = useState('es'); // Suponiendo que el idioma se maneja por página\n\n  // Lógica para el scroll-spy\n  useEffect(() => {\n    const handleScroll = () => {\n      const sections = ['home', 'services', 'learning', 'contact'];\n      const scrollPosition = window.scrollY + window.innerHeight / 2;\n \n      for (const sectionId of sections) {\n        const section = document.getElementById(sectionId);\n        if (section) {\n          if (scrollPosition >= section.offsetTop && scrollPosition < section.offsetTop + section.offsetHeight) {\n            setCurrentPage(sectionId);\n            break;\n          }\n        }\n      }\n    };\n \n    window.addEventListener('scroll', handleScroll);\n    return () => window.removeEventListener('scroll', handleScroll);\n  }, []);\n \n  // Lógica para la navegación interna de la página\n  const handleNavigate = (pageId) => {\n    setCurrentPage(pageId);\n    const section = document.getElementById(pageId);\n    if (section) {\n      window.scrollTo({\n        top: section.offsetTop - 80, // Ajuste para el header fijo\n        behavior: 'smooth',\n      });\n    }\n  };\n\n  // NOTA: El `handleToggleLanguage` lo hemos dejado en App.js\n  // por ahora, pero lo ideal sería usar un Context. Esto lo podemos\n  // ver como una mejora futura. De momento pasaremos el idioma desde App.js\n \n  return (\n    // Usamos un React.Fragment (<>) porque no necesitamos un div extra.\n    <>\n      <HomeSection language={language} onNavigate={handleNavigate} />\n      <ServicesSection language={language} /> {/* Actualizaremos esto en el siguiente paso */}\n      <LearningSection language={language} onNavigate={handleNavigate} />\n      <ContactSection language={language} />\n    </>\n  );\n};\n \nexport default HomePage;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAElD;AACA,OAAOC,WAAW,MAAM,2BAA2B;AACnD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,cAAc,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB;EACA;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EACtD,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAEhD;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAGA,CAAA,KAAM;MACzB,MAAMC,QAAQ,GAAG,CAAC,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,CAAC;MAC5D,MAAMC,cAAc,GAAGC,MAAM,CAACC,OAAO,GAAGD,MAAM,CAACE,WAAW,GAAG,CAAC;MAE9D,KAAK,MAAMC,SAAS,IAAIL,QAAQ,EAAE;QAChC,MAAMM,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACH,SAAS,CAAC;QAClD,IAAIC,OAAO,EAAE;UACX,IAAIL,cAAc,IAAIK,OAAO,CAACG,SAAS,IAAIR,cAAc,GAAGK,OAAO,CAACG,SAAS,GAAGH,OAAO,CAACI,YAAY,EAAE;YACpGd,cAAc,CAACS,SAAS,CAAC;YACzB;UACF;QACF;MACF;IACF,CAAC;IAEDH,MAAM,CAACS,gBAAgB,CAAC,QAAQ,EAAEZ,YAAY,CAAC;IAC/C,OAAO,MAAMG,MAAM,CAACU,mBAAmB,CAAC,QAAQ,EAAEb,YAAY,CAAC;EACjE,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMc,cAAc,GAAIC,MAAM,IAAK;IACjClB,cAAc,CAACkB,MAAM,CAAC;IACtB,MAAMR,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAACM,MAAM,CAAC;IAC/C,IAAIR,OAAO,EAAE;MACXJ,MAAM,CAACa,QAAQ,CAAC;QACdC,GAAG,EAAEV,OAAO,CAACG,SAAS,GAAG,EAAE;QAAE;QAC7BQ,QAAQ,EAAE;MACZ,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA;EACA;;EAEA;IAAA;IACE;IACA3B,OAAA,CAAAE,SAAA;MAAA0B,QAAA,gBACE5B,OAAA,CAACL,WAAW;QAACY,QAAQ,EAAEA,QAAS;QAACsB,UAAU,EAAEN;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/DjC,OAAA,CAACJ,eAAe;QAACW,QAAQ,EAAEA;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,KAAC,eACxCjC,OAAA,CAACH,eAAe;QAACU,QAAQ,EAAEA,QAAS;QAACsB,UAAU,EAAEN;MAAe;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnEjC,OAAA,CAACF,cAAc;QAACS,QAAQ,EAAEA;MAAS;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eACtC;EAAC;AAEP,CAAC;AAAC7B,EAAA,CApDID,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AAsDd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}